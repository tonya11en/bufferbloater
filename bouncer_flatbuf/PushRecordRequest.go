// Code generated by the FlatBuffers compiler. DO NOT EDIT.

//nolint
package bouncer_flatbuf

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type PushRecordRequest struct {
	_tab flatbuffers.Table
}

func GetRootAsPushRecordRequest(buf []byte, offset flatbuffers.UOffsetT) *PushRecordRequest {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &PushRecordRequest{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *PushRecordRequest) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *PushRecordRequest) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *PushRecordRequest) PayloadType() Payload {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return Payload(rcv._tab.GetByte(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *PushRecordRequest) MutatePayloadType(n Payload) bool {
	return rcv._tab.MutateByteSlot(4, byte(n))
}

func (rcv *PushRecordRequest) Payload(obj *flatbuffers.Table) bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		rcv._tab.Union(obj, o)
		return true
	}
	return false
}

func PushRecordRequestStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func PushRecordRequestAddPayloadType(builder *flatbuffers.Builder, payloadType Payload) {
	builder.PrependByteSlot(0, byte(payloadType), 0)
}
func PushRecordRequestAddPayload(builder *flatbuffers.Builder, payload flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(payload), 0)
}
func PushRecordRequestEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
